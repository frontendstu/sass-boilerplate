@use 'functions' as func;

// Create breakpoint mixins for media queries
$breakpoints-up: (
  'sm': func.getEm(640),
  'md': func.getEm(1024),
  'lg': func.getEm(1280),
  'xl': func.getEm(1440),
);

$breakpoints-down: (
  'sm': func.getEm(639.98),
  'md': func.getEm(1023.98),
  'lg': func.getEm(1279.98),
  'xl': func.getEm(1439.98),
);

@mixin breakpoint($breakpointSize) {
  @media (min-width: map-get($breakpoints-up, $breakpointSize)) {
    @content;
  }
}

@mixin breakpoint-down($breakpointSize) {
  @media (max-width: map-get($breakpoints-down, $breakpointSize)) {
    @content;
  }
}

// Create mixins for hover, focus and focus-within states
@mixin hover {
  &:hover {
    @content;
  }
}

@mixin focus {
  &:focus {
    @content;
  }
}

@mixin focus-within {
  &:focus-within {
    @content;
  }
}

@mixin hover-focus {
  &:hover,
  &:focus {
    @content;
  }
}

@mixin hover-focus-within {
  &:hover,
  &:focus-within {
    @content;
  }
}

// Create mixins for flexbox
@mixin flex {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-colum {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

// Create mixins for grid
@mixin grid(
  $grid-col-count,
  $grid-col-row-count: null,
  $grid-row-gap: null,
  $grid-col-gap: null
) {
  display: grid;
  grid-template-columns: $grid-col-count;
  grid-template-rows: $grid-col-row-count;
  column-gap: $grid-col-gap;
  row-gap: $grid-row-gap;
}
